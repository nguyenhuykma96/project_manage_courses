{"ast":null,"code":"import * as Types from './../constants/ActionTypes';\nimport UserService from '../../services/user.services';\nimport Swal from 'sweetalert2';\nimport { resolve } from 'url';\nvar userService = new UserService();\nexport var actAddUser = function actAddUser(user) {\n  return {\n    type: Types.ADD_USER,\n    user: user\n  };\n};\nexport var actAddUserRequest = function actAddUserRequest(user) {\n  return function (dispatch) {\n    return userService.addUser(user).then(function (res) {\n      dispatch(actAddUser(res.data));\n\n      if (typeof res.data === 'string') {\n        Swal.fire({\n          type: 'error',\n          title: 'Fail...',\n          text: 'Username existed!'\n        });\n      } else {\n        Swal.fire('Successfully!', 'Add user success!', 'success');\n      }\n    }).catch(function (err) {\n      console.log('server fail');\n    });\n  };\n};\nexport var actGetAllUsers = function actGetAllUsers(userList) {\n  return {\n    type: Types.GET_ALL_USER,\n    userList: userList\n  };\n};\nexport var actGetAllUsersRequest = function actGetAllUsersRequest() {\n  return function (dispatch) {\n    return userService.getAllUsers().then(function (res) {\n      dispatch(actGetAllUsers(res.data));\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n};\nexport var actDeleteUser = function actDeleteUser(taiKhoan) {\n  return {\n    type: Types.DELETE_USER,\n    taiKhoan: taiKhoan\n  };\n};\nexport var actDeleteUserRequest = function actDeleteUserRequest(taiKhoan) {\n  new Promise(resolve);\n};\nexport var actGetUserEditing = function actGetUserEditing(userEditing) {\n  return {\n    type: Types.EDIT_USER,\n    userEditing: userEditing\n  };\n};\nexport var actUpdateUser = function actUpdateUser(user) {\n  return {\n    type: Types.UPDATE_USER,\n    user: user\n  };\n};\nexport var actUpdateUserRequest = function actUpdateUserRequest(user) {\n  return function (dispatch) {\n    return userService.updateUser(user).then(function (res) {\n      console.log(res.data);\n      dispatch(actUpdateUser(res.data));\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n}; // edit status update user\n\nexport var actChangeEditStatus = function actChangeEditStatus() {\n  return {\n    type: Types.CHANGE_EDIT_STATUS,\n    status: false\n  };\n};\nexport var actChangeEditStatusTrue = function actChangeEditStatusTrue() {\n  return {\n    type: Types.CHANGE_EDIT_STATUS,\n    status: true\n  };\n};","map":{"version":3,"sources":["D:\\Cybersoft front end\\ReactJS\\Đồ án cuối khóa\\manage-courses\\src\\store\\action\\user.action.js"],"names":["Types","UserService","Swal","resolve","userService","actAddUser","user","type","ADD_USER","actAddUserRequest","dispatch","addUser","then","res","data","fire","title","text","catch","err","console","log","actGetAllUsers","userList","GET_ALL_USER","actGetAllUsersRequest","getAllUsers","actDeleteUser","taiKhoan","DELETE_USER","actDeleteUserRequest","Promise","actGetUserEditing","userEditing","EDIT_USER","actUpdateUser","UPDATE_USER","actUpdateUserRequest","updateUser","actChangeEditStatus","CHANGE_EDIT_STATUS","status","actChangeEditStatusTrue"],"mappings":"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","sourcesContent":["import * as Types from './../constants/ActionTypes';\r\nimport UserService from '../../services/user.services';\r\nimport Swal from 'sweetalert2';\r\nimport { resolve } from 'url';\r\n\r\n\r\n\r\nconst userService = new UserService();\r\nexport const actAddUser = (user) => {\r\n    return {\r\n        type: Types.ADD_USER,\r\n        user\r\n    }\r\n}\r\nexport const actAddUserRequest = (user) => {\r\n    return dispatch => {\r\n        return userService.addUser(user)\r\n            .then(res => {\r\n                dispatch(actAddUser(res.data));\r\n                if (typeof (res.data) === 'string') {\r\n                    Swal.fire({\r\n                        type: 'error',\r\n                        title: 'Fail...',\r\n                        text: 'Username existed!',\r\n                    })\r\n                } else {\r\n                    Swal.fire(\r\n                        'Successfully!',\r\n                        'Add user success!',\r\n                        'success'\r\n                    )\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log('server fail');\r\n            })\r\n    }\r\n}\r\n\r\nexport const actGetAllUsers = (userList) => {\r\n    return {\r\n        type: Types.GET_ALL_USER,\r\n        userList\r\n    }\r\n}\r\nexport const actGetAllUsersRequest = () => {\r\n    return dispatch => {\r\n        return userService.getAllUsers()\r\n            .then(res => {\r\n                dispatch(actGetAllUsers(res.data));\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport const actDeleteUser = (taiKhoan) => {\r\n    return {\r\n        type: Types.DELETE_USER,\r\n        taiKhoan\r\n    }\r\n}\r\nexport const actDeleteUserRequest = taiKhoan => {\r\n   new Promise(resolve, )\r\n    \r\n}\r\nexport const actGetUserEditing = userEditing => {\r\n    return {\r\n        type :Types.EDIT_USER,\r\n        userEditing\r\n    }\r\n}\r\nexport const actUpdateUser = user => {\r\n    return {\r\n        type : Types.UPDATE_USER,\r\n        user\r\n    }\r\n}\r\nexport const actUpdateUserRequest = user => {\r\n    return dispatch => {\r\n        return userService.updateUser(user)\r\n            .then( res => {\r\n                console.log(res.data);\r\n                dispatch(actUpdateUser(res.data));\r\n                \r\n            })\r\n            .catch( err => {\r\n                console.log(err);\r\n                \r\n            })\r\n    }\r\n}\r\n// edit status update user\r\nexport const actChangeEditStatus = () => {\r\n    return {\r\n        type: Types.CHANGE_EDIT_STATUS,\r\n        status: false\r\n    }\r\n}\r\nexport const actChangeEditStatusTrue = () => {\r\n    return {\r\n        type: Types.CHANGE_EDIT_STATUS,\r\n        status: true\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}