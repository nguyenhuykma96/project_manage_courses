{"ast":null,"code":"import * as Types from '../constants/ActionTypes';\nimport AuthService from './../../services/auth.service';\nimport Swal from 'sweetalert2';\nimport { stringify } from 'querystring';\nvar authService = new AuthService();\nexport var actRegisterUser = function actRegisterUser(user) {\n  return {\n    type: Types.REGISTER_USER,\n    user: user\n  };\n};\nexport var actRegisterUserRequest = function actRegisterUserRequest(user) {\n  return function (dispatch) {\n    authService.registerUser(user).then(function (res) {\n      if (res.data) {\n        var newUser = {\n          TaiKhoan: user.TaiKhoan,\n          HoTen: user.HoTen,\n          Email: user.Email,\n          SoDT: user.SoDT,\n          MaLoaiNguoiDung: user.MaLoaiNguoiDung\n        };\n        dispatch(actRegisterUser(newUser));\n      } else {\n        Swal.fire({\n          type: 'error',\n          title: 'Fail...',\n          text: 'Register fail!'\n        });\n      }\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n}; // login\n\nexport var actLoginUser = function actLoginUser(user) {\n  return {\n    type: Types.REGISTER_USER,\n    user: user\n  };\n};\nexport var actLoginUserRequest = function actLoginUserRequest(user) {\n  return function (dispatch) {\n    authService.loginUser(user).then(function (res) {\n      dispatch(actLoginUser(user));\n      console.log(res.data[0]);\n      localStorage.setItem('UserLogin', JSON.stringify);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n};","map":{"version":3,"sources":["D:\\Cybersoft front end\\ReactJS\\Đồ án cuối khóa\\manage-courses\\src\\store\\action\\auth.action.js"],"names":["Types","AuthService","Swal","stringify","authService","actRegisterUser","user","type","REGISTER_USER","actRegisterUserRequest","dispatch","registerUser","then","res","data","newUser","TaiKhoan","HoTen","Email","SoDT","MaLoaiNguoiDung","fire","title","text","catch","err","console","log","actLoginUser","actLoginUserRequest","loginUser","localStorage","setItem","JSON"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,0BAAvB;AACA,OAAOC,WAAP,MAAwB,+BAAxB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,SAASC,SAAT,QAA0B,aAA1B;AAEA,IAAMC,WAAW,GAAG,IAAIH,WAAJ,EAApB;AACA,OAAO,IAAMI,eAAe,GAAG,SAAlBA,eAAkB,CAAAC,IAAI,EAAI;AACnC,SAAO;AACHC,IAAAA,IAAI,EAAGP,KAAK,CAACQ,aADV;AAEHF,IAAAA,IAAI,EAAJA;AAFG,GAAP;AAIH,CALM;AAMP,OAAO,IAAMG,sBAAsB,GAAG,SAAzBA,sBAAyB,CAAAH,IAAI,EAAI;AAC1C,SAAO,UAAAI,QAAQ,EAAI;AACfN,IAAAA,WAAW,CAACO,YAAZ,CAAyBL,IAAzB,EACCM,IADD,CACM,UAAAC,GAAG,EAAI;AACT,UAAGA,GAAG,CAACC,IAAP,EACA;AACI,YAAMC,OAAO,GAAG;AACZC,UAAAA,QAAQ,EAAGV,IAAI,CAACU,QADJ;AAEZC,UAAAA,KAAK,EAAGX,IAAI,CAACW,KAFD;AAGZC,UAAAA,KAAK,EAAGZ,IAAI,CAACY,KAHD;AAIZC,UAAAA,IAAI,EAAGb,IAAI,CAACa,IAJA;AAKZC,UAAAA,eAAe,EAAGd,IAAI,CAACc;AALX,SAAhB;AAOAV,QAAAA,QAAQ,CAACL,eAAe,CAACU,OAAD,CAAhB,CAAR;AACH,OAVD,MAWK;AACDb,QAAAA,IAAI,CAACmB,IAAL,CAAU;AACNd,UAAAA,IAAI,EAAE,OADA;AAENe,UAAAA,KAAK,EAAE,SAFD;AAGNC,UAAAA,IAAI,EAAE;AAHA,SAAV;AAKH;AACJ,KApBD,EAqBCC,KArBD,CAqBQ,UAAAC,GAAG,EAAI;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAvBD;AAwBH,GAzBD;AA0BH,CA3BM,C,CA4BP;;AACA,OAAO,IAAMG,YAAY,GAAG,SAAfA,YAAe,CAACtB,IAAD,EAAU;AAClC,SAAO;AACHC,IAAAA,IAAI,EAAGP,KAAK,CAACQ,aADV;AAEHF,IAAAA,IAAI,EAAJA;AAFG,GAAP;AAIH,CALM;AAMP,OAAO,IAAMuB,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACvB,IAAD,EAAU;AACzC,SAAO,UAAAI,QAAQ,EAAI;AACfN,IAAAA,WAAW,CAAC0B,SAAZ,CAAsBxB,IAAtB,EACCM,IADD,CACO,UAAAC,GAAG,EAAI;AACVH,MAAAA,QAAQ,CAACkB,YAAY,CAACtB,IAAD,CAAb,CAAR;AACAoB,MAAAA,OAAO,CAACC,GAAR,CAAYd,GAAG,CAACC,IAAJ,CAAS,CAAT,CAAZ;AACAiB,MAAAA,YAAY,CAACC,OAAb,CAAqB,WAArB,EAAkCC,IAAI,CAAC9B,SAAvC;AAGH,KAPD,EAQCqB,KARD,CAQQ,UAAAC,GAAG,EAAI;AACXC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AACH,KAVD;AAWH,GAZD;AAaH,CAdM","sourcesContent":["import * as Types from '../constants/ActionTypes';\r\nimport AuthService from './../../services/auth.service';\r\nimport Swal from 'sweetalert2';\r\nimport { stringify } from 'querystring';\r\n\r\nconst authService = new AuthService() ;\r\nexport const actRegisterUser = user => {\r\n    return {\r\n        type : Types.REGISTER_USER,\r\n        user\r\n    }\r\n}\r\nexport const actRegisterUserRequest = user => {\r\n    return dispatch => {\r\n        authService.registerUser(user)\r\n        .then(res => {\r\n            if(res.data)\r\n            {\r\n                const newUser = {\r\n                    TaiKhoan : user.TaiKhoan,\r\n                    HoTen : user.HoTen,\r\n                    Email : user.Email,\r\n                    SoDT : user.SoDT,\r\n                    MaLoaiNguoiDung : user.MaLoaiNguoiDung,\r\n                }\r\n                dispatch(actRegisterUser(newUser));\r\n            }\r\n            else {\r\n                Swal.fire({\r\n                    type: 'error',\r\n                    title: 'Fail...',\r\n                    text: 'Register fail!'\r\n                });\r\n            }\r\n        })\r\n        .catch( err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n}\r\n// login\r\nexport const actLoginUser = (user) => {\r\n    return {\r\n        type : Types.REGISTER_USER,\r\n        user\r\n    }\r\n}\r\nexport const actLoginUserRequest = (user) => {\r\n    return dispatch => {\r\n        authService.loginUser(user)\r\n        .then( res => {\r\n            dispatch(actLoginUser(user));\r\n            console.log(res.data[0]);\r\n            localStorage.setItem('UserLogin', JSON.stringify)\r\n            \r\n\r\n        })\r\n        .catch( err => {\r\n            console.log(err);\r\n        })\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}