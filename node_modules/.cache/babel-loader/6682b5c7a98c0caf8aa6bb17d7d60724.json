{"ast":null,"code":"import * as Types from '../constants/ActionTypes';\nimport AuthService from './../../services/auth.service';\nimport Swal from 'sweetalert2';\nvar authService = new AuthService();\nexport var actRegisterUser = function actRegisterUser(user) {\n  return {\n    type: Types.REGISTER_USER,\n    user: user\n  };\n};\nexport var actRegisterUserRequest = function actRegisterUserRequest(user) {\n  return function (dispatch) {\n    authService.registerUser(user).then(function (res) {\n      if (res.data) {\n        var newUser = {\n          TaiKhoan: user.TaiKhoan,\n          HoTen: user.HoTen,\n          Email: user.Email,\n          SoDT: user.SoDT,\n          MaLoaiNguoiDung: user.MaLoaiNguoiDung\n        };\n        dispatch(actRegisterUser(newUser));\n      } else {\n        Swal.fire({\n          type: 'error',\n          title: 'Fail...',\n          text: 'Register fail!'\n        });\n      }\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n}; // login\n\nexport var actLoginUser = function actLoginUser(user) {\n  return {\n    type: Types.LOGIN,\n    user: user\n  };\n};\nexport var actLoginUserRequest = function actLoginUserRequest(user) {\n  return function (dispatch) {\n    authService.loginUser(user).then(function (res) {\n      if (typeof res.data !== 'string') {\n        dispatch(actLoginUser(user));\n        sessionStorage.setItem('UserLogin', JSON.stringify(res.data[0])); //alert\n\n        var Toast = Swal.mixin({\n          toast: true,\n          position: 'top-end',\n          showConfirmButton: false,\n          timer: 3000\n        });\n        Toast.fire({\n          type: 'success',\n          title: 'Welcome to CyberSoft'\n        });\n      } else {\n        Swal.fire({\n          type: 'error',\n          title: 'Oops...',\n          text: 'Login went wrong!'\n        });\n      }\n    }).catch(function (err) {\n      Swal.fire({\n        type: 'error',\n        title: 'Oops...',\n        text: 'Login went wrong!'\n      });\n    });\n  };\n};","map":{"version":3,"sources":["D:\\Cybersoft front end\\ReactJS\\Đồ án cuối khóa\\manage-courses\\src\\store\\action\\auth.action.js"],"names":["Types","AuthService","Swal","authService","actRegisterUser","user","type","REGISTER_USER","actRegisterUserRequest","dispatch","registerUser","then","res","data","newUser","TaiKhoan","HoTen","Email","SoDT","MaLoaiNguoiDung","fire","title","text","catch","err","console","log","actLoginUser","LOGIN","actLoginUserRequest","loginUser","sessionStorage","setItem","JSON","stringify","Toast","mixin","toast","position","showConfirmButton","timer"],"mappings":"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","sourcesContent":["import * as Types from '../constants/ActionTypes';\r\nimport AuthService from './../../services/auth.service';\r\nimport Swal from 'sweetalert2';\r\n\r\nconst authService = new AuthService();\r\nexport const actRegisterUser = user => {\r\n    return {\r\n        type: Types.REGISTER_USER,\r\n        user\r\n    }\r\n}\r\nexport const actRegisterUserRequest = user => {\r\n    return dispatch => {\r\n        authService.registerUser(user)\r\n            .then(res => {\r\n                if (res.data) {\r\n                    const newUser = {\r\n                        TaiKhoan: user.TaiKhoan,\r\n                        HoTen: user.HoTen,\r\n                        Email: user.Email,\r\n                        SoDT: user.SoDT,\r\n                        MaLoaiNguoiDung: user.MaLoaiNguoiDung,\r\n                    }\r\n                    dispatch(actRegisterUser(newUser));\r\n                }\r\n                else {\r\n                    Swal.fire({\r\n                        type: 'error',\r\n                        title: 'Fail...',\r\n                        text: 'Register fail!'\r\n                    });\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n            })\r\n    }\r\n}\r\n// login\r\nexport const actLoginUser = (user) => {\r\n    return {\r\n        type: Types.LOGIN,\r\n        user\r\n    }\r\n}\r\nexport const actLoginUserRequest = (user) => {\r\n    return dispatch => {\r\n        authService.loginUser(user)\r\n            .then(res => {\r\n                if (typeof res.data !== 'string') {\r\n                    dispatch(actLoginUser(user));\r\n                    sessionStorage.setItem('UserLogin', JSON.stringify(res.data[0]));\r\n                    //alert\r\n                    const Toast = Swal.mixin({\r\n                        toast: true,\r\n                        position: 'top-end',\r\n                        showConfirmButton: false,\r\n                        timer: 3000\r\n                    });\r\n                    Toast.fire({\r\n                        type: 'success',\r\n                        title: 'Welcome to CyberSoft'\r\n                    })\r\n                } else {\r\n                    Swal.fire({\r\n                        type: 'error',\r\n                        title: 'Oops...',\r\n                        text: 'Login went wrong!',\r\n                    })\r\n                }\r\n            })\r\n            .catch(err => {\r\n                Swal.fire({\r\n                    type: 'error',\r\n                    title: 'Oops...',\r\n                    text: 'Login went wrong!',\r\n                })\r\n            })\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}