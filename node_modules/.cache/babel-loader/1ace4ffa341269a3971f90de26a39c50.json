{"ast":null,"code":"import * as Types from './../constants/ActionTypes';\nimport UserService from '../../services/user.services';\nimport Swal from 'sweetalert2';\nvar userService = new UserService();\nexport var actAddUser = function actAddUser(user) {\n  return {\n    type: Types.ADD_USER,\n    user: user\n  };\n};\nexport var actAddUserRequest = function actAddUserRequest(user) {\n  return function (dispatch) {\n    return userService.addUser(user).then(function (res) {\n      dispatch(actAddUser(res.data));\n\n      if (typeof res.data === 'string') {\n        Swal.fire({\n          type: 'error',\n          title: 'Fail...',\n          text: 'Username existed!'\n        });\n      } else {\n        Swal.fire('Successfully!', 'Add user success!', 'success');\n      }\n    }).catch(function (err) {\n      console.log('server fail');\n    });\n  };\n};\nexport var actGetAllUsers = function actGetAllUsers(userList) {\n  return {\n    type: Types.GET_ALL_USER,\n    userList: userList\n  };\n};\nexport var actGetAllUsersRequest = function actGetAllUsersRequest() {\n  return function (dispatch) {\n    return userService.getAllUsers().then(function (res) {\n      dispatch(actGetAllUsers(res.data));\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n};\nexport var actDeleteUser = function actDeleteUser(taiKhoan) {\n  return {\n    type: Types.DELETE_USER,\n    taiKhoan: taiKhoan\n  };\n};\nexport var actDeleteUserRequest = function actDeleteUserRequest(taiKhoan) {\n  return function (dispatch) {\n    return userService.deleteUser(taiKhoan).then(function (res) {\n      dispatch(actDeleteUser(taiKhoan));\n      Swal.fire({\n        title: 'Are you sure?',\n        // text: \"You won't be able to revert this!\",\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: '#3085d6',\n        cancelButtonColor: '#d33',\n        confirmButtonText: 'Yes, delete it!'\n      }).then(function (result) {\n        if (result.value) {\n          Swal.fire('Deleted!', 'User select has been deleted.', 'success');\n        }\n      });\n    }).catch(function (err) {\n      console.log(err);\n    });\n  };\n};\nexport var actUpdateUser = function actUpdateUser(userEditing) {\n  return {\n    type: Types.UPDATE_USER,\n    userEditing: userEditing\n  };\n};\nexport var actUpdateUserRequest = function actUpdateUserRequest(userEditing) {};","map":{"version":3,"sources":["D:\\Cybersoft front end\\ReactJS\\Đồ án cuối khóa\\manage-courses\\src\\store\\action\\user.action.js"],"names":["Types","UserService","Swal","userService","actAddUser","user","type","ADD_USER","actAddUserRequest","dispatch","addUser","then","res","data","fire","title","text","catch","err","console","log","actGetAllUsers","userList","GET_ALL_USER","actGetAllUsersRequest","getAllUsers","actDeleteUser","taiKhoan","DELETE_USER","actDeleteUserRequest","deleteUser","showCancelButton","confirmButtonColor","cancelButtonColor","confirmButtonText","result","value","actUpdateUser","userEditing","UPDATE_USER","actUpdateUserRequest"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,4BAAvB;AACA,OAAOC,WAAP,MAAwB,8BAAxB;AACA,OAAOC,IAAP,MAAiB,aAAjB;AAIA,IAAMC,WAAW,GAAG,IAAIF,WAAJ,EAApB;AACA,OAAO,IAAMG,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAU;AAChC,SAAO;AACHC,IAAAA,IAAI,EAAEN,KAAK,CAACO,QADT;AAEHF,IAAAA,IAAI,EAAJA;AAFG,GAAP;AAIH,CALM;AAMP,OAAO,IAAMG,iBAAiB,GAAG,SAApBA,iBAAoB,CAACH,IAAD,EAAU;AACvC,SAAO,UAAAI,QAAQ,EAAI;AACf,WAAON,WAAW,CAACO,OAAZ,CAAoBL,IAApB,EACFM,IADE,CACG,UAAAC,GAAG,EAAI;AACTH,MAAAA,QAAQ,CAACL,UAAU,CAACQ,GAAG,CAACC,IAAL,CAAX,CAAR;;AACA,UAAI,OAAQD,GAAG,CAACC,IAAZ,KAAsB,QAA1B,EAAoC;AAChCX,QAAAA,IAAI,CAACY,IAAL,CAAU;AACNR,UAAAA,IAAI,EAAE,OADA;AAENS,UAAAA,KAAK,EAAE,SAFD;AAGNC,UAAAA,IAAI,EAAE;AAHA,SAAV;AAKH,OAND,MAMO;AACHd,QAAAA,IAAI,CAACY,IAAL,CACI,eADJ,EAEI,mBAFJ,EAGI,SAHJ;AAKH;AACJ,KAhBE,EAiBFG,KAjBE,CAiBI,UAAAC,GAAG,EAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAY,aAAZ;AACH,KAnBE,CAAP;AAoBH,GArBD;AAsBH,CAvBM;AAyBP,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,QAAD,EAAc;AACxC,SAAO;AACHhB,IAAAA,IAAI,EAAEN,KAAK,CAACuB,YADT;AAEHD,IAAAA,QAAQ,EAARA;AAFG,GAAP;AAIH,CALM;AAMP,OAAO,IAAME,qBAAqB,GAAG,SAAxBA,qBAAwB,GAAM;AACvC,SAAO,UAAAf,QAAQ,EAAI;AACf,WAAON,WAAW,CAACsB,WAAZ,GACFd,IADE,CACG,UAAAC,GAAG,EAAI;AACTH,MAAAA,QAAQ,CAACY,cAAc,CAACT,GAAG,CAACC,IAAL,CAAf,CAAR;AACH,KAHE,EAIFI,KAJE,CAII,UAAAC,GAAG,EAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAEH,KAPE,CAAP;AAQH,GATD;AAWH,CAZM;AAcP,OAAO,IAAMQ,aAAa,GAAG,SAAhBA,aAAgB,CAACC,QAAD,EAAc;AACvC,SAAO;AACHrB,IAAAA,IAAI,EAAEN,KAAK,CAAC4B,WADT;AAEHD,IAAAA,QAAQ,EAARA;AAFG,GAAP;AAIH,CALM;AAMP,OAAO,IAAME,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAF,QAAQ,EAAI;AAC5C,SAAO,UAAAlB,QAAQ,EAAI;AACf,WAAON,WAAW,CAAC2B,UAAZ,CAAuBH,QAAvB,EACFhB,IADE,CACG,UAAAC,GAAG,EAAI;AACTH,MAAAA,QAAQ,CAACiB,aAAa,CAACC,QAAD,CAAd,CAAR;AACAzB,MAAAA,IAAI,CAACY,IAAL,CAAU;AACNC,QAAAA,KAAK,EAAE,eADD;AAEN;AACAT,QAAAA,IAAI,EAAE,SAHA;AAINyB,QAAAA,gBAAgB,EAAE,IAJZ;AAKNC,QAAAA,kBAAkB,EAAE,SALd;AAMNC,QAAAA,iBAAiB,EAAE,MANb;AAONC,QAAAA,iBAAiB,EAAE;AAPb,OAAV,EAQGvB,IARH,CAQQ,UAACwB,MAAD,EAAY;AAChB,YAAIA,MAAM,CAACC,KAAX,EAAkB;AACdlC,UAAAA,IAAI,CAACY,IAAL,CACI,UADJ,EAEI,+BAFJ,EAGI,SAHJ;AAKH;AACJ,OAhBD;AAiBH,KApBE,EAqBFG,KArBE,CAqBI,UAAAC,GAAG,EAAI;AACVC,MAAAA,OAAO,CAACC,GAAR,CAAYF,GAAZ;AAEH,KAxBE,CAAP;AAyBH,GA1BD;AA2BH,CA5BM;AA6BP,OAAO,IAAMmB,aAAa,GAAG,SAAhBA,aAAgB,CAAAC,WAAW,EAAI;AACxC,SAAO;AACHhC,IAAAA,IAAI,EAAEN,KAAK,CAACuC,WADT;AAEHD,IAAAA,WAAW,EAAXA;AAFG,GAAP;AAIH,CALM;AAMP,OAAO,IAAME,oBAAoB,GAAG,SAAvBA,oBAAuB,CAAAF,WAAW,EAAI,CAElD,CAFM","sourcesContent":["import * as Types from './../constants/ActionTypes';\r\nimport UserService from '../../services/user.services';\r\nimport Swal from 'sweetalert2';\r\n\r\n\r\n\r\nconst userService = new UserService();\r\nexport const actAddUser = (user) => {\r\n    return {\r\n        type: Types.ADD_USER,\r\n        user\r\n    }\r\n}\r\nexport const actAddUserRequest = (user) => {\r\n    return dispatch => {\r\n        return userService.addUser(user)\r\n            .then(res => {\r\n                dispatch(actAddUser(res.data));\r\n                if (typeof (res.data) === 'string') {\r\n                    Swal.fire({\r\n                        type: 'error',\r\n                        title: 'Fail...',\r\n                        text: 'Username existed!',\r\n                    })\r\n                } else {\r\n                    Swal.fire(\r\n                        'Successfully!',\r\n                        'Add user success!',\r\n                        'success'\r\n                    )\r\n                }\r\n            })\r\n            .catch(err => {\r\n                console.log('server fail');\r\n            })\r\n    }\r\n}\r\n\r\nexport const actGetAllUsers = (userList) => {\r\n    return {\r\n        type: Types.GET_ALL_USER,\r\n        userList\r\n    }\r\n}\r\nexport const actGetAllUsersRequest = () => {\r\n    return dispatch => {\r\n        return userService.getAllUsers()\r\n            .then(res => {\r\n                dispatch(actGetAllUsers(res.data));\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n\r\n            })\r\n    }\r\n\r\n}\r\n\r\nexport const actDeleteUser = (taiKhoan) => {\r\n    return {\r\n        type: Types.DELETE_USER,\r\n        taiKhoan\r\n    }\r\n}\r\nexport const actDeleteUserRequest = taiKhoan => {\r\n    return dispatch => {\r\n        return userService.deleteUser(taiKhoan)\r\n            .then(res => {\r\n                dispatch(actDeleteUser(taiKhoan));\r\n                Swal.fire({\r\n                    title: 'Are you sure?',\r\n                    // text: \"You won't be able to revert this!\",\r\n                    type: 'warning',\r\n                    showCancelButton: true,\r\n                    confirmButtonColor: '#3085d6',\r\n                    cancelButtonColor: '#d33',\r\n                    confirmButtonText: 'Yes, delete it!'\r\n                }).then((result) => {\r\n                    if (result.value) {\r\n                        Swal.fire(\r\n                            'Deleted!',\r\n                            'User select has been deleted.',\r\n                            'success'\r\n                        )\r\n                    }\r\n                })\r\n            })\r\n            .catch(err => {\r\n                console.log(err);\r\n\r\n            })\r\n    }\r\n}\r\nexport const actUpdateUser = userEditing => {\r\n    return {\r\n        type :Types.UPDATE_USER,\r\n        userEditing\r\n    }\r\n}\r\nexport const actUpdateUserRequest = userEditing => {\r\n    \r\n}"]},"metadata":{},"sourceType":"module"}